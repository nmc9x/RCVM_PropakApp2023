<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>